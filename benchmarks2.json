{
  "variables": {
    "header-sets": {
      "none": "",
      "json": "--header Accept:application/json,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7 --header Connection:keep-alive",
      "plaintext": "--header Accept:text/plain,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7 --header Connection:keep-alive",
      "connection-close": "--header Connection:close"
    },
    "preset-headers": "json",
    "serverUri": null,
    "path": "/"
  },
  "services": {
    "WeatherApp-RouteToCode": {
      "ReadyStateText": "Application started.",
      "Scenario": "WeatherApp-RouteToCode",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-route-to-code",
        "DockerContextDirectory": "dotnet/weatherapp-route-to-code/",
        "DockerFile": "dotnet/weatherapp-route-to-code/Dockerfile"
      }
    },
    "WeatherApp-Controllers": {
      "ReadyStateText": "Application started.",
      "Scenario": "WeatherApp-Controllers",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-controllers",
        "DockerContextDirectory": "dotnet/weatherapp-controllers/",
        "DockerFile": "dotnet/weatherapp-controllers/Dockerfile"
      }
    },
    "WeatherApp-Go": {
      "ReadyStateText": "app listening on port 5000!",
      "Scenario": "WeatherApp-Go",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-go",
        "DockerContextDirectory": "go/weatherapp-go/",
        "DockerFile": "go/weatherapp-go/Dockerfile"
      }
    },
    "WeatherApp-GoFastHttp": {
      "ReadyStateText": "app listening on port 5000!",
      "Scenario": "WeatherApp-GoFastHttp",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-gofasthttp",
        "DockerContextDirectory": "go/weatherapp-gofasthttp/",
        "DockerFile": "go/weatherapp-gofasthttp/Dockerfile"
      }
    },
    "WeatherApp-Express": {
      "ReadyStateText": "app listening on port 5000!",
      "Scenario": "WeatherApp-Express",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-express",
        "DockerContextDirectory": "node/weatherapp-express/",
        "DockerFile": "node/weatherapp-express/Dockerfile"
      }
    },
    "WeatherApp-ExpressClustered": {
      "ReadyStateText": "app listening on port 5000!",
      "Scenario": "WeatherApp-ExpressClustered",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-expressclustered",
        "DockerContextDirectory": "node/weatherapp-expressclustered/",
        "DockerFile": "node/weatherapp-expressclustered/Dockerfile"
      }
    },
    "WeatherApp-Flask": {
      "ReadyStateText": "Listening at:",
      "Scenario": "WeatherApp-Flask",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-flask",
        "DockerContextDirectory": "python/weatherapp-flask/",
        "DockerFile": "python/weatherapp-flask/Dockerfile"
      }
    },
    "WeatherApp-SpringBoot": {
      "ReadyStateText": "Started WeatherappApplication",
      "Scenario": "WeatherApp-SpringBoot",
      "Source": {
        "Repository": "https://github.com/rynowak/benchmarks-playground.git",
        "BranchOrCommit": "master",
        "DockerImageName": "weatherapp-springboot",
        "DockerContextDirectory": "java/weatherapp-springboot/",
        "DockerFile": "java/weatherapp-springboot/Dockerfile"
      },
      "WeatherApp-SpringBootWebFlux": {
        "ReadyStateText": "Started WeatherappApplication",
        "Scenario": "WeatherApp-SpringBootWebFlux",
        "Source": {
          "Repository": "https://github.com/rynowak/benchmarks-playground.git",
          "BranchOrCommit": "master",
          "DockerImageName": "weatherapp-springbootwebflux",
          "DockerContextDirectory": "java/weatherapp-springbootwebflux/",
          "DockerFile": "java/weatherapp-springbootwebflux/Dockerfile"
        }
      }
    },
    "pipelineclient": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/PipeliningClient/PipeliningClient.csproj"
      },
      "readyStateText": "Starting",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "waitForExit": true, // Blocking
      "scenario": "PipelineClient",
      // "span": "1:00:00", // Keeps repeating the jobs for this duration
      "variables": {
        "connections": 256,
        "warmup": 5,
        "duration": 5,
        "pipeline": 16,
        "min": 0, // minimum number of connections
        "rate": 0, // growth rate of connections
        "interval": 1
      },
      "arguments": "--url \"{{serverUri}}{{path}}\" --connections {{connections}} {% if min != 0 %} -m {{ min }} {% endif %} {% if rate != 0 %} -r {{ rate }} {% endif %} {% if interval != 1 %} -i {{ interval }} {% endif %} --warmup {{warmup}} --duration {{duration}} --pipeline {{pipeline}} {{header-sets[preset-headers]}}"
    },
    "bombardier": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/BombardierClient/BombardierClient.csproj"
      },
      "options": {
        "displayOutput": true
      },
      "readyStateText": "Bombardier Client",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "noArguments": true,
      "waitForExit": true,
      "scenario": "Bombardier",
      // "span": "1:00:00", // Keeps repeating the jobs for this duration
      "variables": {
        "connections": 256,
        "warmup": 5,
        "duration": 5,
        "pipeline": 16
      },
      "arguments": "-c {{connections}} {{serverUri}}{{path}} -d {{duration}}s -l {{header-sets[preset-headers]}}"
    },
    "wrk": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/WrkClient/WrkClient.csproj"
      },
      "options": {
        "displayOutput": true
      },
      "readyStateText": "Running ",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "noArguments": true,
      "waitForExit": true,
      "scenario": "Wrk",
      "variables": {
        "connections": 256,
        "duration": "15",
        "threads": 32
      },
      "arguments": "-c {{connections}} {{serverUri}}{{path}} -d {{duration}}s -t {{threads}} {{header-sets[preset-headers]}}"
    },
    "gentle_warmup": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/WrkClient/WrkClient.csproj"
      },
      "options": {
        "displayOutput": true
      },
      "readyStateText": "Running ",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "noArguments": true,
      "waitForExit": true,
      "scenario": "Gentle_Warmup",
      "variables": {
        "warmup_connections": 1,
        "warmup_duration": "30",
        "warmup_threads": 1
      },
      "arguments": "-c {{warmup_connections}} {{serverUri}}{{path}} -d {{warmup_duration}}s -t {{warmup_threads}} {{header-sets[preset-headers]}}"
    }
  }
}